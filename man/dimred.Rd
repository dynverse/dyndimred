% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dimred.R, R/dimred_dm_destiny.R,
%   R/dimred_dm_diffusionmap.R, R/dimred_ica.R, R/dimred_landmark_mds.R,
%   R/dimred_lle.R, R/dimred_mds.R, R/dimred_mds_isomds.R,
%   R/dimred_mds_sammon.R, R/dimred_mds_smacof.R, R/dimred_pca.R,
%   R/dimred_umap.R, R/list_dimred_methods.R
\name{dimred}
\alias{dimred}
\alias{dimred_dm_destiny}
\alias{dimred_dm_diffusionmap}
\alias{dimred_ica}
\alias{dimred_landmark_mds}
\alias{dimred_lle}
\alias{dimred_mds}
\alias{dimred_mds_isomds}
\alias{dimred_mds_sammon}
\alias{dimred_mds_smacof}
\alias{dimred_pca}
\alias{dimred_umap}
\alias{list_dimred_methods}
\title{Perform simple dimensionality reduction}
\usage{
dimred(x, method, ndim, ...)

dimred_dm_destiny(x, ndim = 2, distance_method = c("euclidean",
  "spearman", "cosine"))

dimred_dm_diffusionmap(x, ndim = 2, distance_method = c("pearson",
  "spearman", "cosine", "euclidean", "manhattan"))

dimred_ica(x, ndim = 3)

dimred_landmark_mds(x, ndim = 2, distance_method = c("pearson",
  "spearman", "cosine", "euclidean", "manhattan"))

dimred_lle(x, ndim = 3)

dimred_mds(x, ndim = 2, distance_method = c("pearson", "spearman",
  "cosine", "euclidean", "manhattan"))

dimred_mds_isomds(x, ndim = 2, distance_method = c("pearson",
  "spearman", "cosine", "euclidean", "manhattan"))

dimred_mds_sammon(x, ndim = 2, distance_method = c("pearson",
  "spearman", "cosine", "euclidean", "manhattan"))

dimred_mds_smacof(x, ndim = 2, distance_method = c("pearson",
  "spearman", "cosine", "euclidean", "manhattan"))

dimred_pca(x, ndim = 2)

dimred_umap(x, ndim = 2, n_neighbors = 15L, init = "spectral",
  n_threads = 1)

list_dimred_methods()
}
\arguments{
\item{x}{Log transformed expression data, with rows as cells and columns as features}

\item{method}{The name of the dimensionality reduction method to use}

\item{ndim}{The number of dimensions}

\item{...}{Any arguments to be passed to the dimensionality reduction method}

\item{distance_method}{The name of the distance metric, see \link[dynutils:calculate_distance]{dynutils::calculate_distance}}

\item{n_neighbors}{The size of local neighborhood (in terms of number of
neighboring sample points) used for manifold approximation. Larger values
result in more global views of the manifold, while smaller values result in
more local data being preserved. In general values should be in the range
\code{2} to \code{100}.}

\item{init}{Type of initialization for the coordinates. Options are:
 \itemize{
   \item \code{"spectral"} Spectral embedding using the normalized Laplacian
   of the fuzzy 1-skeleton, with Gaussian noise added.
   \item \code{"normlaplacian"}. Spectral embedding using the normalized
   Laplacian of the fuzzy 1-skeleton, without noise.
   \item \code{"random"}. Coordinates assigned using a uniform random
   distribution between -10 and 10.
   \item \code{"lvrandom"}. Coordinates assigned using a Gaussian
   distribution with standard deviation 1e-4, as used in LargeVis
   (Tang et al., 2016) and t-SNE.
   \item \code{"laplacian"}. Spectral embedding using the Laplacian Eigenmap
   (Belkin and Niyogi, 2002).
   \item \code{"pca"}. The first two principal components from PCA of
   \code{X} if \code{X} is a data frame, and from a 2-dimensional classical
   MDS if \code{X} is of class \code{"dist"}.
   \item \code{"spca"}. Like \code{"pca"}, but each dimension is then scaled
   so the standard deviation is 1e-4, to give a distribution similar to that
   used in t-SNE. This is an alias for \code{init = "pca", init_sdev =
   1e-4}.
   \item \code{"agspectral"} An "approximate global" modification of
   \code{"spectral"} which all edges in the graph to a value of 1, and then
   sets a random number of edges (\code{negative_sample_rate} edges per
   vertex) to 0.1, to approximate the effect of non-local affinities.
   \item A matrix of initial coordinates.
 }
For spectral initializations, (\code{"spectral"}, \code{"normlaplacian"},
\code{"laplacian"}), if more than one connected component is identified,
each connected component is initialized separately and the results are
merged. If \code{verbose = TRUE} the number of connected components are
logged to the console. The existence of multiple connected components
implies that a global view of the data cannot be attained with this
initialization. Either a PCA-based initialization or increasing the value of
\code{n_neighbors} may be more appropriate.}

\item{n_threads}{Number of threads to use (except during stochastic gradient
descent). Default is half that recommended by RcppParallel. For
nearest neighbor search, only applies if \code{nn_method = "annoy"}. If 
\code{n_threads > 1}, then the Annoy index will be temporarily written to
disk in the location determined by \code{\link[base]{tempfile}}.}
}
\description{
Perform simple dimensionality reduction
}
\examples{
library(Matrix)
x <- abs(Matrix::rsparsematrix(100, 100, .5))
dimred(x, "pca", ndim = 3)
dimred(x, "ica", ndim = 3)

\dontrun{
dimred_dm_destiny(x)
dimred_dm_diffusionmap(x)
dimred_ica(x)
dimred_landmark_mds(x)
dimred_lle(x)
dimred_mds(x)
dimred_mds_isomds(x)
dimred_mds_sammon(x)
dimred_mds_smacof(x)
dimred_pca(x)
dimred_tsne(x)
dimred_umap(x)
}

}
